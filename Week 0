# üöÄ Week 0 ‚Äî Tool Installation 
![Project banner](../assets/banner.png)

[![Smoke Tests](https://github.com/<username>/<repo>/actions/workflows/smoke.yml/badge.svg)](https://github.com/<username>/<repo>/actions)  
[Program sign-up & weekly task portal (VSD-IAT)](https://vsdiat.vlsisystemdesign.com/sign-up) ¬∑ [Reference doc / example repo](https://github.com/spatha0011/spatha_vsd-hdp/tree/main/Day0)

---

> **Week 0 objective:** Prepare the dev environment for the India RISC-V Tapeout Program ‚Äî install the required EDA toolchain on an Ubuntu VM and provide visual proof (terminal screenshots) for each installation.

---

## ‚ú® Why this README is here
This file is a ready-to-paste, eye-catching Week-0 deliverable you can commit straight into `week-00/README.md`.  
It lists recommended VM specs, provides concise, friendly descriptions of each tool, step-by-step install/verify commands, and tells you how to capture and store proof screenshots.

---

## üñ•Ô∏è Recommended VM / System config
- **RAM:** 6 GB  
- **Disk:** 50 GB  
- **OS:** Ubuntu 20.04 LTS or newer  
- **vCPU:** 4

If you use VirtualBox, download it here: https://www.virtualbox.org/wiki/Downloads

---

## üß∞ Tools (what & why) ‚Äî short descriptions

### Yosys ‚Äî RTL synthesis engine
Yosys is an open-source synthesis tool that converts your SystemVerilog/Verilog RTL into gate-level netlists. It‚Äôs a key piece of an open-source ASIC flow (used before P&R / OpenLane).
- Website / repo: https://github.com/YosysHQ/yosys

### Icarus Verilog (`iverilog`) ‚Äî simulator
Icarus Verilog is a lightweight open-source Verilog simulator. Use it for quick functional simulation and smoke tests of your RTL and testbenches.
- Install for fast local simulation and VCD generation for GTKWave.

### GTKWave ‚Äî waveform viewer
GTKWave opens `.vcd` / `.fst` waveform files produced by simulations. Use it to inspect signals, debug RTL, and capture waveform screenshots for reports.

### VirtualBox (optional) ‚Äî host VM platform
Use VirtualBox to run a reproducible Ubuntu VM environment on your host machine if you prefer the sandboxed VM approach.


---

## Installation instructions (commands)

### 1) VirtualBox
Download and install VirtualBox from:
https://www.virtualbox.org/wiki/Downloads

---

### 2) Yosys (build from source)
```bash
sudo apt-get update
git clone https://github.com/YosysHQ/yosys.git
cd yosys
# ensure build tools available
sudo apt install -y make
sudo apt-get install -y build-essential clang bison flex \
 libreadline-dev gawk tcl-dev libffi-dev git \
 graphviz xdot pkg-config python3 libboost-system-dev \
 libboost-python-dev libboost-filesystem-dev zlib1g-dev
make config-gcc
make
sudo make install
````

**Verify Yosys installation**

```bash
yosys -V
```

**Proof image (example):**

![Yosys installed proof](../assets/yosys_installed.png)

---

### 3) Icarus Verilog (`iverilog`)

```bash
sudo apt-get update
sudo apt-get install -y iverilog
```

**Verify Icarus Verilog**

```bash
iverilog -v
```

**Proof image (example):**

![Icarus Verilog installed proof](../assets/iverilog_installed.png)

---

### 4) GTKWave

```bash
sudo apt-get update
sudo apt install -y gtkwave
```

**Verify GTKWave**

```bash
gtkwave --version
```

**Proof image (example):**

![GTKWave installed proof](../assets/gtkwave_installed.png)

---

